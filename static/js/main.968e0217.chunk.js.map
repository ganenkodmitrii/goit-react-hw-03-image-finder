{"version":3,"sources":["components/Searchbar/Searchbar.js","components/imageAPI.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/ImageInfo/ImageInfo.js","App.js","index.js"],"names":["Searchbar","state","image","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","props","formSubmitHandler","reset","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchImages","name","fetch","then","response","json","ImageGalleryItem","id","webformatURL","src","alt","ImageGallery","images","map","ImageInfo","error","status","prevProps","prevState","snapshot","imageName","imageAPI","hits","message","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAKqBA,G,wNACjBC,MAAQ,CACJC,MAAO,I,EAGXC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,MAAMC,iB,EAGjDC,aAAe,SAAAL,GAGX,GAFAA,EAAEM,iBAE8B,KAA5B,EAAKT,MAAMC,MAAMS,OACjB,OAAOC,YAAM,eAGjB,EAAKC,MAAMC,kBAAkB,EAAKb,MAAMC,OACxC,EAAKa,S,EAGTA,MAAQ,WACJ,EAAKV,SAAS,CAAEH,MAAO,M,uDAIvB,OACI,wBAAQc,UAAU,YAAlB,SACI,uBAAMC,SAAUC,KAAKT,aAAcO,UAAU,aAA7C,UACI,wBAAQG,KAAK,SAASH,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,sBAGJ,uBACIA,UAAU,mBACVG,KAAK,OACLZ,MAAOW,KAAKjB,MAAMC,MAClBkB,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUL,KAAKf,wB,GAvCAqB,cCWvC,IAGeC,EAHH,CACRC,YAjBJ,SAAqBC,GAIjB,OAAOC,MAAM,GAAD,OAHK,2BAGL,gBAFI,qCAEJ,yEACmFD,IAC7FE,MAAK,SAAAC,GAEH,OAAOA,EAASC,YCRT,SAASC,EAAT,GAAiD,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,aAC3C,OACI,oBAAIlB,UAAU,mBAAd,SACI,qBAAKmB,IAAKD,EAAcE,IAAI,GAAGpB,UAAU,4BADPiB,GCA/B,SAASI,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OACnC,OAAO,oBAAItB,UAAU,eAAd,SAA8BsB,EAAOC,IAAIP,K,ICE/BQ,E,4MACjBvC,MAAQ,CACJqC,OAAQ,GACRG,MAAO,KACPC,OAAQ,Q,iEAGOC,EAAWC,EAAWC,GAAW,IAAD,OAC3CF,EAAUG,YAAc5B,KAAKL,MAAMiC,YACnC5B,KAAKb,SAAS,CAAEqC,OAAQ,YACxBK,EACKrB,YAAYR,KAAKL,MAAMiC,WAKvBjB,MAAK,SAAA3B,GAAK,OACP,EAAKG,SAAS,CAAEiC,OAAQpC,EAAM8C,KAAMN,OAAQ,mB,+BAMlD,IAAD,EAC6BxB,KAAKjB,MAA/BqC,EADH,EACGA,OAAQG,EADX,EACWA,MAAOC,EADlB,EACkBA,OAGvB,MAAe,SAAXA,EACO,iDAGI,YAAXA,EACO,4CAGI,aAAXA,EACO,8BAAMD,EAAMQ,UAGR,aAAXP,EAEI,8BAQI,cAACL,EAAD,CAAcC,OAAQA,WAVlC,M,GAvC+Bd,aCqBxB0B,E,4MAlBXjD,MAAQ,CACJ6C,UAAW,I,EAGfK,iBAAmB,SAAAL,GACf,EAAKzC,SAAS,CAAEyC,e,uDAGhB,OACI,gCACI,cAAC,EAAD,CAAWhC,kBAAmBI,KAAKiC,mBACnC,cAAC,EAAD,CAAWL,UAAW5B,KAAKjB,MAAM6C,YACjC,cAAC,IAAD,CAAgBM,UAAW,a,GAbzB5B,aCFlB6B,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.968e0217.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Searchbar extends Component {\n    state = {\n        image: '',\n    };\n\n    handleChange = e => {\n        this.setState({ image: e.currentTarget.value.toLowerCase() });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (this.state.image.trim() === '') {\n            return toast('Enter text!');\n        }\n\n        this.props.formSubmitHandler(this.state.image);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ image: '' });\n    };\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        value={this.state.image}\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        onChange={this.handleChange}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n","function fetchImages(name) {\n    const BASE_URL = 'https://pixabay.com/api/';\n    const API_KEY = '19044793-8d0b89c981ce143090a5b157d';\n\n    return fetch(\n        `${BASE_URL}?key=${API_KEY}&page=1&image_type=photo&orientation=horizontal&per_page=12&q=${name}`,\n    ).then(response => {\n        // if (response.ok) {\n        return response.json();\n        // }\n        // return Promise.reject(\n        //     new Error(`Информации по вашему запросу \"${name}\" не найдено`),\n        // );\n    });\n}\n\nconst api = {\n    fetchImages,\n};\nexport default api;\n","export default function ImageGalleryItem({ id, webformatURL }) {\n    return (\n        <li className=\"ImageGalleryItem\" key={id}>\n            <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\n        </li>\n    );\n}\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ images }) {\n    return <ul className=\"ImageGallery\">{images.map(ImageGalleryItem)}</ul>;\n}\n","import { Component } from 'react';\nimport imageAPI from '../imageAPI';\n\nimport ImageGallery from '../ImageGallery/ImageGallery';\n\nexport default class ImageInfo extends Component {\n    state = {\n        images: [],\n        error: null,\n        status: 'idle',\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.imageName !== this.props.imageName) {\n            this.setState({ status: 'pending' });\n            imageAPI\n                .fetchImages(this.props.imageName)\n                // .then(data => {\n                //     console.log(data.hits);\n                //     return data.hits;\n                // })\n                .then(image =>\n                    this.setState({ images: image.hits, status: 'resolved' }),\n                );\n            // .catch(error => this.setState({ error, status: 'rejected' }));\n        }\n    }\n\n    render() {\n        const { images, error, status } = this.state;\n        // const { imageName } = this.props;\n\n        if (status === 'idle') {\n            return <div>add name image</div>;\n        }\n\n        if (status === 'pending') {\n            return <div>Update...</div>;\n        }\n\n        if (status === 'rejected') {\n            return <div>{error.message}</div>;\n        }\n\n        if (status === 'resolved') {\n            return (\n                <div>\n                    {/* <li className=\"ImageGalleryItem\">\n                        <img\n                            src={images[0].webformatURL}\n                            alt=\"\"\n                            className=\"ImageGalleryItem-image\"\n                        />\n                    </li> */}\n                    <ImageGallery images={images} />\n                </div>\n            );\n        }\n    }\n}\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageInfo from './components/ImageInfo';\n\nclass App extends Component {\n    state = {\n        imageName: '',\n    };\n\n    handleFormSubmit = imageName => {\n        this.setState({ imageName });\n    };\n    render() {\n        return (\n            <div>\n                <Searchbar formSubmitHandler={this.handleFormSubmit} />\n                <ImageInfo imageName={this.state.imageName} />\n                <ToastContainer autoClose={2000} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}