{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageAPI/ImageAPI.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loading/Loading.js","components/ImagesError/ImagesError.js","components/ImagesNotFound/ImagesNotFound.js","components/ImageInfo/ImageInfo.js","App.js","index.js"],"names":["Searchbar","state","search","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","info","props","formSubmitHandler","reset","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","webformatURL","largeImageURL","clickOnImageItem","onClick","src","url","alt","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","ImageGallery","showModal","imageModal","openModal","closeModal","images","map","el","id","style","height","Button","loadMoreBtn","propTypes","PropTypes","func","contacts","arrayOf","shape","string","isRequired","bool","Loading","textAlign","color","width","timeout","ImagesErrorView","message","role","ImagesnotFound","ImageInfo","error","status","handleBtnChangePage","nextPage","ImageAPI","searchImage","data","hits","handleScroll","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","prevProps","prevState","catch","length","margin","padding","App","handleFormSubmit","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dac542bc.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Searchbar extends Component {\n    state = {\n        search: '',\n    };\n\n    handleChange = e => {\n        this.setState({ search: e.currentTarget.value.toLowerCase() });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (this.state.search.trim() === '') {\n            return toast.info('Ничего не ввели в поиск! :(');\n        }\n\n        this.props.formSubmitHandler(this.state.search);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ search: '' });\n    };\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        value={this.state.search}\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Поиск\"\n                        onChange={this.handleChange}\n                    />\n\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n                </form>\n            </header>\n        );\n    }\n}\nSearchbar.propTypes = {\n    search: PropTypes.string,\n    formSubmitHandler: PropTypes.func,\n};\n","function fetchImages(name, page) {\n    const BASE_URL = 'https://pixabay.com/api/';\n    const API_KEY = '19044793-8d0b89c981ce143090a5b157d';\n\n    return fetch(\n        `${BASE_URL}?key=${API_KEY}&page=${page}&image_type=photo&orientation=horizontal&per_page=12&q=${name}`,\n    ).then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return Promise.reject(new Error('Что-то пошло не так'));\n    });\n}\n\nconst api = {\n    fetchImages,\n};\nexport default api;\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n    webformatURL,\n    largeImageURL,\n    clickOnImageItem,\n}) {\n    return (\n        <li\n            onClick={() => clickOnImageItem(largeImageURL)}\n            className=\"ImageGalleryItem\"\n        >\n            <img\n                src={webformatURL}\n                url={largeImageURL}\n                alt=\"\"\n                className=\"ImageGalleryItem-image\"\n            />\n        </li>\n    );\n}\nImageGalleryItem.propTypes = {\n    webformatURL: PropTypes.string,\n    largeImageURL: PropTypes.string,\n    clickOnImageItem: PropTypes.func,\n};\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n    componentDidMount() {\n        // console.log('Modal componentDidMount');\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        // console.log('Modal componentWillUnmount');\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = e => {\n        if (e.code === 'Escape') {\n            // console.log('Нажали ESC, нужно закрыть модалку');\n\n            this.props.onCloseModal();\n        }\n    };\n\n    handleBackdropClick = event => {\n        // console.log('Кликнули в бекдроп');\n\n        // console.log('currentTarget: ', event.currentTarget);\n        // console.log('target: ', event.target);\n\n        if (event.currentTarget === event.target) {\n            this.props.onCloseModal();\n        }\n    };\n\n    render() {\n        return createPortal(\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n                <div className=\"Modal\">{this.props.children}</div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\nModal.propTypes = {\n    onCloseModal: PropTypes.func,\n    children: PropTypes.node,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Modal from '../Modal';\nexport default class ImageGallery extends Component {\n    state = {\n        showModal: false,\n        imageModal: '',\n    };\n\n    openModal = largeImageURL => {\n        this.setState({\n            showModal: true,\n            imageModal: largeImageURL,\n        });\n    };\n\n    closeModal = () => {\n        this.setState({\n            showModal: false,\n        });\n    };\n\n    render() {\n        const { showModal, imageModal } = this.state;\n        return (\n            <>\n                <ul className=\"ImageGallery\">\n                    {this.props.images.map(el => (\n                        <ImageGalleryItem\n                            key={el.id}\n                            webformatURL={el.webformatURL}\n                            largeImageURL={el.largeImageURL}\n                            clickOnImageItem={this.openModal}\n                        />\n                    ))}\n                </ul>\n                {showModal && (\n                    <Modal onCloseModal={this.closeModal}>\n                        {\n                            <img\n                                style={{ height: 540 }}\n                                src={imageModal}\n                                alt=\"\"\n                            />\n                        }\n                    </Modal>\n                )}\n            </>\n        );\n    }\n}\nImageGalleryItem.propTypes = {\n    openModal: PropTypes.func,\n    closeModal: PropTypes.func,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            webformatURL: PropTypes.string.isRequired,\n            largeImageURL: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        }),\n    ),\n\n    showModal: PropTypes.bool,\n    imageModal: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nexport default function Button({ loadMoreBtn }) {\n    return (\n        <div className=\"BoxBtn\">\n            <button type=\"button\" className=\"Button\" onClick={loadMoreBtn}>\n                Load more\n            </button>\n        </div>\n    );\n}\nButton.propTypes = {\n    loadMoreBtn: PropTypes.func,\n};\n","import Loader from 'react-loader-spinner';\nexport default function Loading() {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <Loader\n                type=\"Circles\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={3000} //3 secs\n            />\n        </div>\n    );\n}\n","import PropTypes from 'prop-types';\n\nexport default function ImagesErrorView({ message }) {\n    return (\n        <div role=\"alert\">\n            <p>Извините, что-то пошло не так. Error: {message}</p>\n        </div>\n    );\n}\nImagesErrorView.propTypes = {\n    message: PropTypes.string,\n};\n","export default function ImagesnotFound() {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <p>Картинки с таким именем нет</p>\n        </div>\n    );\n}\n","import { Component } from 'react';\nimport ImageAPI from '../ImageAPI/ImageAPI';\nimport PropTypes from 'prop-types';\nimport ImageGallery from '../ImageGallery';\nimport Button from '../Button';\nimport Loading from '../Loading';\nimport ImagesError from '../ImagesError';\nimport ImagesNotFound from '../ImagesNotFound';\n\nexport default class ImageInfo extends Component {\n    state = {\n        images: [],\n        error: null,\n        status: 'idle',\n        page: 1,\n        showModal: false,\n        imageModal: '',\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.searchImage !== this.props.searchImage) {\n            this.setState({ status: 'pending', page: 1 });\n\n            ImageAPI.fetchImages(this.props.searchImage, this.state.page)\n                .then(data => {\n                    this.setState({\n                        images: data.hits,\n                        status: 'resolved',\n                    });\n                })\n                // ???Catch не работает :(\n                .catch(error => {\n                    this.setState({\n                        error: error,\n                        status: 'rejected',\n                    });\n                });\n        }\n    }\n\n    handleBtnChangePage = () => {\n        const nextPage = this.state.page + 1;\n        this.setState({\n            page: this.state.page + 1,\n        });\n\n        ImageAPI.fetchImages(this.props.searchImage, nextPage).then(data =>\n            this.setState(({ images }) => ({\n                images: [...images, ...data.hits],\n            })),\n        );\n\n        this.handleScroll();\n    };\n\n    handleScroll = () => {\n        setTimeout(() => {\n            window.scrollBy({\n                top: document.documentElement.clientHeight - 160,\n                behavior: 'smooth',\n            });\n        }, 1000);\n    };\n\n    render() {\n        const { images, error, status } = this.state;\n\n        if (status === 'idle') {\n            return <div style={{ textAlign: 'center' }}>Введите в поиск</div>;\n        }\n\n        if (status === 'pending') {\n            return <Loading />;\n        }\n\n        if (status === 'rejected') {\n            return <ImagesError message={error.message} />;\n        }\n\n        if (status === 'resolved') {\n            return images.length ? (\n                <div style={{ margin: '0 auto', padding: 10 }}>\n                    <ImageGallery images={images} />\n                    <Button loadMoreBtn={this.handleBtnChangePage} />\n                </div>\n            ) : (\n                <ImagesNotFound />\n            );\n        }\n    }\n}\nImageInfo.propTypes = {\n    images: PropTypes.array,\n    error: PropTypes.string,\n    status: PropTypes.string,\n    page: PropTypes.number,\n    showModal: PropTypes.bool,\n    imageModal: PropTypes.string,\n    searchImage: PropTypes.string,\n};\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport Searchbar from './components/Searchbar';\nimport ImageInfo from './components/ImageInfo';\n\nclass App extends Component {\n    state = {\n        searchImage: '',\n    };\n\n    handleFormSubmit = searchImage => {\n        this.setState({ searchImage });\n    };\n    render() {\n        return (\n            <div className=\"App\">\n                <Searchbar formSubmitHandler={this.handleFormSubmit} />\n                <ImageInfo searchImage={this.state.searchImage} />\n                <ToastContainer autoClose={2000} position=\"top-center\" />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}